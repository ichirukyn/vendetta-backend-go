// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/classes": {
            "get": {
                "tags": [
                    "classes"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entities.Class"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "classes"
                ],
                "parameters": [
                    {
                        "description": "field",
                        "name": "classes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateClassDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Class"
                            }
                        }
                    }
                }
            }
        },
        "/classes/:id": {
            "get": {
                "tags": [
                    "classes"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Class"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "classes"
                ],
                "parameters": [
                    {
                        "description": "field",
                        "name": "classes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateClassDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Class"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "classes"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/classes/:id/effects": {
            "get": {
                "tags": [
                    "classes"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.ClassEffect"
                            }
                        }
                    }
                }
            }
        },
        "/classes/effects": {
            "get": {
                "tags": [
                    "classes"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entities.ClassEffect"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entities.User"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "field",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "get": {
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "field",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateClassDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "desc_short": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "main_attr": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserDTO": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateClassDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "desc_short": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "main_attr": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserDTO": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "entities.Class": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "desc_short": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "main_attr": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race": {
                    "$ref": "#/definitions/entities.Race"
                },
                "race_id": {
                    "type": "string"
                },
                "tag": {
                    "$ref": "#/definitions/entities.Tag"
                },
                "tag_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entities.ClassEffect": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "class_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entities.Race": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "desc_short": {
                    "type": "string"
                },
                "effects": {
                    "$ref": "#/definitions/entities.RaceEffect"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "$ref": "#/definitions/entities.Tag"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "entities.RaceEffect": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entities.Tag": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "dexterity": {
                    "type": "integer"
                },
                "health": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "intelligence": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "soul": {
                    "type": "integer"
                },
                "speed": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "submission": {
                    "type": "integer"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
